// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
Array [
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <RNSScreenStack
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RNSScreen
        collapsable={false}
        forwardedRef={[Function]}
        gestureResponseDistance={
          Object {
            "bottom": -1,
            "end": -1,
            "start": -1,
            "top": -1,
          }
        }
        nativeBackButtonDismissalEnabled={false}
        onAppear={[Function]}
        onDisappear={[Function]}
        onDismissed={[Function]}
        onHeaderBackButtonClicked={[Function]}
        onNativeDismissCancelled={[Function]}
        onTransitionProgress={[Function]}
        onWillDisappear={[Function]}
        replaceAnimation="push"
        stackPresentation="push"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
        swipeDirection="horizontal"
      >
        <RNSScreenStackHeaderConfig
          backButtonInCustomView={false}
          backgroundColor="rgb(255, 255, 255)"
          color="rgb(0, 122, 255)"
          direction="ltr"
          disableBackButtonMenu={false}
          hidden={true}
          hideBackButton={false}
          largeTitleHideShadow={false}
          title="Home"
          titleColor="rgb(28, 28, 30)"
          topInsetEnabled={false}
          translucent={false}
        />
        <View
          style={
            Array [
              Object {
                "flex": 1,
              },
              Object {
                "backgroundColor": "rgb(242, 242, 242)",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                },
                undefined,
              ]
            }
          >
            <RNSScreenNavigationContainer
              style={
                Object {
                  "flex": 1,
                  "overflow": "hidden",
                }
              }
            >
              <RNSScreen
                activityState={2}
                collapsable={false}
                forwardedRef={[Function]}
                gestureResponseDistance={
                  Object {
                    "bottom": -1,
                    "end": -1,
                    "start": -1,
                    "top": -1,
                  }
                }
                style={
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                    "zIndex": 0,
                  }
                }
              >
                <View
                  accessibilityElementsHidden={false}
                  importantForAccessibility="auto"
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgb(242, 242, 242)",
                        "flex": 1,
                      },
                      Array [
                        Object {
                          "flex": 1,
                          "flexDirection": "column-reverse",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <RCTSafeAreaView
                      style={
                        Object {
                          "backgroundColor": "#FFF",
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "height": 100,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                              "flexDirection": "row",
                              "paddingHorizontal": 24,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "backgroundColor": "#FFF",
                                "flex": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "marginRight": 24,
                                }
                              }
                            >
                              <Text
                                style={
                                  Object {
                                    "color": "#1E1B26",
                                  }
                                }
                              >
                                Ol√°,
                              </Text>
                              <Text
                                style={
                                  Object {
                                    "color": "#1E1B26",
                                  }
                                }
                              >
                                Ricardo
                              </Text>
                            </View>
                          </View>
                        </View>
                      </View>
                      <View>
                        <TextInput
                          onChangeText={[Function]}
                          placeholder="Busca"
                          style={
                            Object {
                              "borderColor": "#EEEFF0",
                              "borderRadius": 20,
                              "borderWidth": 2,
                              "margin": 10,
                              "paddingLeft": 10,
                            }
                          }
                          value=""
                        />
                      </View>
                      <View
                        style={
                          Object {
                            "flex": 1,
                            "margin": 10,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "flexDirection": "row",
                              "justifyContent": "space-between",
                              "paddingHorizontal": 24,
                            }
                          }
                        >
                          <Text
                            style={
                              Object {
                                "color": "#1E1B26",
                              }
                            }
                          >
                            Favoritos
                          </Text>
                          <View
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                          >
                            <Text
                              style={
                                Object {
                                  "alignSelf": "flex-start",
                                  "color": "#424BAF",
                                  "textDecorationLine": "underline",
                                }
                              }
                            >
                              Veja mais
                            </Text>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "flex": 1,
                              "marginTop": 24,
                            }
                          }
                        >
                          <RCTScrollView
                            data={Array []}
                            getItem={[Function]}
                            getItemCount={[Function]}
                            horizontal={true}
                            keyExtractor={[Function]}
                            onContentSizeChange={[Function]}
                            onLayout={[Function]}
                            onMomentumScrollBegin={[Function]}
                            onMomentumScrollEnd={[Function]}
                            onScroll={[Function]}
                            onScrollBeginDrag={[Function]}
                            onScrollEndDrag={[Function]}
                            removeClippedSubviews={false}
                            renderItem={[Function]}
                            scrollEventThrottle={50}
                            showsHorizontalScrollIndicator={false}
                            stickyHeaderIndices={Array []}
                            viewabilityConfigCallbackPairs={Array []}
                          >
                            <View />
                          </RCTScrollView>
                        </View>
                      </View>
                    </RCTSafeAreaView>
                  </View>
                </View>
              </RNSScreen>
            </RNSScreenNavigationContainer>
            <View
              collapsable={false}
              onLayout={[Function]}
              pointerEvents="auto"
              style={
                Object {
                  "backgroundColor": "rgb(255, 255, 255)",
                  "borderTopColor": "rgb(216, 216, 216)",
                  "borderTopWidth": 0.5,
                  "bottom": 0,
                  "elevation": 8,
                  "height": 49,
                  "left": 0,
                  "paddingBottom": 0,
                  "paddingHorizontal": 0,
                  "position": null,
                  "right": 0,
                  "transform": Array [
                    Object {
                      "translateY": 0,
                    },
                  ],
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
              <View
                accessibilityRole="tablist"
                style={
                  Object {
                    "flex": 1,
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  accessibilityLabel="Home, tab, 1 of 1"
                  accessibilityRole="button"
                  accessibilityState={
                    Object {
                      "selected": true,
                    }
                  }
                  accessibilityStates={
                    Array [
                      "selected",
                    ]
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flex": 1,
                      },
                      Object {
                        "backgroundColor": "transparent",
                      },
                      Object {
                        "flexDirection": "column",
                        "justifyContent": "flex-end",
                      },
                      undefined,
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "flex": 1,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "alignSelf": "center",
                            "height": "100%",
                            "justifyContent": "center",
                            "minWidth": 25,
                            "position": "absolute",
                            "width": "100%",
                          },
                          Object {
                            "opacity": 1,
                          },
                        ]
                      }
                    >
                      <Image
                        source={
                          Object {
                            "testUri": "../../../src/assets/image/home_icon.jpg",
                          }
                        }
                        style={
                          Object {
                            "height": 35,
                            "width": 55,
                          }
                        }
                      />
                    </View>
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "alignSelf": "center",
                            "height": "100%",
                            "justifyContent": "center",
                            "minWidth": 25,
                            "position": "absolute",
                            "width": "100%",
                          },
                          Object {
                            "opacity": 0,
                          },
                        ]
                      }
                    >
                      <Image
                        source={
                          Object {
                            "testUri": "../../../src/assets/image/home_icon.jpg",
                          }
                        }
                        style={
                          Object {
                            "height": 35,
                            "width": 55,
                          }
                        }
                      />
                    </View>
                  </View>
                  <Text
                    numberOfLines={1}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "textAlign": "center",
                        },
                        Object {
                          "color": "black",
                        },
                        Object {
                          "fontSize": 10,
                        },
                        undefined,
                      ]
                    }
                  >
                    Home
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RNSScreen>
    </RNSScreenStack>
  </RNCSafeAreaProvider>,
  <View
    collapsable={false}
    onLayout={[Function]}
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    pointerEvents="box-none"
    style={
      Object {
        "alignItems": "center",
        "justifyContent": "center",
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
      }
    }
    testID="toastAnimatedContainer"
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#FFF",
          "borderLeftColor": "#69C779",
          "borderLeftWidth": 5,
          "borderRadius": 6,
          "elevation": 2,
          "flexDirection": "row",
          "height": 60,
          "opacity": 1,
          "shadowOffset": Object {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0.1,
          "shadowRadius": 6,
          "width": 340,
        }
      }
      testID="toastTouchableContainer"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "flex-start",
              "flex": 1,
              "justifyContent": "center",
              "paddingHorizontal": 25,
            },
            undefined,
          ]
        }
        testID="toastContentContainer"
      />
    </View>
  </View>,
]
`;
